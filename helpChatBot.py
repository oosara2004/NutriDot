from flask import Flask, request, jsonify
from flask_cors import CORS  
import re
import time

app = Flask(__name__)
CORS(app)

@app.route('/')
def home():
    return "NutriDot ChatBot API - Ready to help with nutrition questions!"

@app.route('/chatbot', methods=['POST', 'OPTIONS'])
def chatbot():
    if request.method == 'OPTIONS':
        return '', 200

    try:
        user_input = request.json.get('message', '').lower().strip()
        
        if not user_input:
            return jsonify({'response': "I didn't receive your message. Could you please try again?"})

        # Enhanced keyword matching with better responses
        response = generate_response(user_input)
        
        # Simulate processing time for better UX
        time.sleep(0.5)
        
        return jsonify({'response': response})
        
    except Exception as e:
        print(f"Error processing request: {e}")
        return jsonify({'response': "I'm experiencing some technical difficulties. Please try again in a moment."})

def generate_response(user_input):
    """Generate contextual responses based on user input"""
    
    # Nutrition-related keywords
    nutrition_keywords = [
        'nutrition', 'calories', 'ingredients', 'diet', 'food label', 'protein', 
        'carbs', 'carbohydrates', 'fat', 'sugar', 'sodium', 'vitamins', 'minerals',
        'healthy eating', 'meal planning', 'weight loss', 'weight gain', 'fitness'
    ]
    
    # Scanning-related keywords
    scan_keywords = [
        'scan', 'scanning', 'barcode', 'read', 'product', 'camera', 'qr code',
        'not working', 'error', 'failed', 'trouble', 'issue', 'problem'
    ]
    
    # Account-related keywords
    account_keywords = [
        'sign up', 'signup', 'register', 'create account', 'sign in', 'signin', 
        'log in', 'login', 'access account', 'password', 'forgot password',
        'reset password', 'profile', 'settings', 'account'
    ]
    
    # App features keywords
    features_keywords = [
        'features', 'dashboard', 'charts', 'goals', 'tracking', 'history',
        'reports', 'statistics', 'progress', 'how to use', 'tutorial'
    ]
    
    # Greeting keywords
    greeting_keywords = ['hello', 'hi', 'hey', 'good morning', 'good afternoon', 'good evening']
    
    # Check for greetings first
    if any(keyword in user_input for keyword in greeting_keywords):
        return ("Hello! üëã Welcome to NutriDot! I'm here to help you with:\n\n"
                "ü•ó Nutrition advice and meal planning\n"
                "üì± App features and how to use them\n"
                "üì∑ Scanning products and reading labels\n"
                "üë§ Account and profile management\n\n"
                "What would you like to know about?")
    
    # Nutrition advice
    if any(keyword in user_input for keyword in nutrition_keywords):
        if 'protein' in user_input:
            return ("ü•© Protein is essential for muscle building and repair! Here are some tips:\n\n"
                    "‚Ä¢ Aim for 0.8-1g per kg of body weight daily\n"
                    "‚Ä¢ Include lean meats, fish, eggs, beans, and nuts\n"
                    "‚Ä¢ Spread protein intake throughout the day\n"
                    "‚Ä¢ Use NutriDot's scanner to check protein content in products!\n\n"
                    "Need help tracking your protein intake?")
        
        elif 'calories' in user_input:
            return ("üî• Managing calories effectively:\n\n"
                    "‚Ä¢ Create a moderate deficit for weight loss (300-500 calories)\n"
                    "‚Ä¢ Focus on nutrient-dense, whole foods\n"
                    "‚Ä¢ Track your intake with NutriDot's dashboard\n"
                    "‚Ä¢ Remember: quality matters as much as quantity!\n\n"
                    "Would you like help setting up your calorie goals?")
        
        elif any(word in user_input for word in ['sugar', 'carbs', 'carbohydrates']):
            return ("üçØ Smart carbohydrate choices:\n\n"
                    "‚Ä¢ Choose complex carbs (whole grains, vegetables)\n"
                    "‚Ä¢ Limit added sugars to less than 10% of daily calories\n"
                    "‚Ä¢ Time carbs around workouts for energy\n"
                    "‚Ä¢ Use our scanner to identify hidden sugars!\n\n"
                    "Need help reading nutrition labels?")
        
        else:
            return ("ü•ó I'd love to help with your nutrition questions! Here's what I can assist with:\n\n"
                    "‚Ä¢ Meal planning and balanced nutrition\n"
                    "‚Ä¢ Understanding macronutrients (protein, carbs, fats)\n"
                    "‚Ä¢ Reading and interpreting food labels\n"
                    "‚Ä¢ Setting realistic health goals\n"
                    "‚Ä¢ Tracking your daily intake\n\n"
                    "What specific nutrition topic interests you most?")
    
    # Scanning help
    elif any(keyword in user_input for keyword in scan_keywords):
        return ("üì∑ Having trouble with scanning? Let me help you out:\n\n"
                "**Common Solutions:**\n"
                "‚Ä¢ Ensure good lighting when scanning\n"
                "‚Ä¢ Hold your phone steady and center the barcode\n"
                "‚Ä¢ Clean your camera lens\n"
                "‚Ä¢ Try scanning from different angles\n"
                "‚Ä¢ Make sure the barcode isn't damaged or wrinkled\n\n"
                "**Still not working?**\n"
                "‚Ä¢ Restart the app and try again\n"
                "‚Ä¢ Check your internet connection\n"
                "‚Ä¢ Update to the latest app version\n\n"
                "If problems persist, please contact our support team!")
    
    # Account help
    elif any(keyword in user_input for keyword in account_keywords):
        if any(word in user_input for word in ['password', 'forgot', 'reset']):
            return ("üîê Password reset help:\n\n"
                    "1. Go to the Sign In page\n"
                    "2. Click 'Forgot Password?'\n"
                    "3. Enter your email address\n"
                    "4. Check your email for reset instructions\n"
                    "5. Follow the link to create a new password\n\n"
                    "**Tips for a strong password:**\n"
                    "‚Ä¢ Use at least 8 characters\n"
                    "‚Ä¢ Include numbers and special characters\n"
                    "‚Ä¢ Avoid common words or personal info\n\n"
                    "Still having trouble? Contact our support team!")
        
        elif any(word in user_input for word in ['sign up', 'signup', 'register', 'create']):
            return ("üìù Creating your NutriDot account:\n\n"
                    "1. Click 'Sign Up' on the main page\n"
                    "2. Fill in your personal information\n"
                    "3. Set your health and nutrition goals\n"
                    "4. Choose your dietary preferences\n"
                    "5. Create a secure password\n"
                    "6. Verify your email address\n\n"
                    "**Why create an account?**\n"
                    "‚Ä¢ Track your nutrition progress\n"
                    "‚Ä¢ Save your favorite foods\n"
                    "‚Ä¢ Get personalized recommendations\n"
                    "‚Ä¢ Access your data across devices\n\n"
                    "Ready to start your healthy journey?")
        
        else:
            return ("üë§ Account management help:\n\n"
                    "**I can help you with:**\n"
                    "‚Ä¢ Creating a new account\n"
                    "‚Ä¢ Signing in to your existing account\n"
                    "‚Ä¢ Resetting your password\n"
                    "‚Ä¢ Updating your profile information\n"
                    "‚Ä¢ Managing your privacy settings\n"
                    "‚Ä¢ Understanding your nutrition data\n\n"
                    "What specific account issue can I help you resolve?")
    
    # App features
    elif any(keyword in user_input for keyword in features_keywords):
        return ("üöÄ NutriDot Features Overview:\n\n"
                "**üìä Dashboard:** View your nutrition stats with colorful charts\n"
                "**üì∑ Scanner:** Instantly scan product barcodes for nutrition info\n"
                "**üë§ Account:** Manage your profile and family members\n"
                "**‚öôÔ∏è Settings:** Customize your goals and preferences\n"
                "**ü§ñ Chat Bot:** Get help anytime (that's me!)\n\n"
                "**Pro Tips:**\n"
                "‚Ä¢ Use daily/weekly/monthly filters on your dashboard\n"
                "‚Ä¢ Set realistic nutrition goals in settings\n"
                "‚Ä¢ Scan products before eating to track intake\n\n"
                "Which feature would you like to learn more about?")
    
    # Help with specific issues
    elif any(word in user_input for word in ['help', 'support', 'problem', 'issue', 'trouble']):
        return ("üÜò I'm here to help! Here are the most common topics I assist with:\n\n"
                "**ü•ó Nutrition & Diet**\n"
                "‚Ä¢ Meal planning and healthy eating tips\n"
                "‚Ä¢ Understanding macronutrients\n"
                "‚Ä¢ Reading nutrition labels\n\n"
                "**üì± App Support**\n"
                "‚Ä¢ How to use scanning features\n"
                "‚Ä¢ Navigating the dashboard\n"
                "‚Ä¢ Account and profile management\n\n"
                "**üìû Additional Support**\n"
                "‚Ä¢ Contact our support team for technical issues\n"
                "‚Ä¢ Check our FAQ section\n"
                "‚Ä¢ Visit our help center\n\n"
                "What specific area do you need help with?")
    
    # Thank you responses
    elif any(word in user_input for word in ['thank', 'thanks', 'appreciate']):
        return ("You're very welcome! üòä I'm always happy to help with your nutrition and health journey.\n\n"
                "Remember, I'm here 24/7 to assist with:\n"
                "‚Ä¢ Nutrition questions and advice\n"
                "‚Ä¢ App features and troubleshooting\n"
                "‚Ä¢ Account support\n\n"
                "Feel free to ask me anything else!")
    
    # Default response for unrecognized input
    else:
        return ("ü§î I want to make sure I give you the most helpful response! Could you tell me more about what you're looking for?\n\n"
                "I'm great at helping with:\n"
                "‚Ä¢ **Nutrition advice** - meal planning, macronutrients, healthy eating\n"
                "‚Ä¢ **App features** - dashboard, scanner, settings\n"
                "‚Ä¢ **Technical support** - scanning issues, account problems\n"
                "‚Ä¢ **General questions** - how to use NutriDot effectively\n\n"
                "Try asking something like:\n"
                "‚Ä¢ 'How do I scan a product?'\n"
                "‚Ä¢ 'What's a healthy amount of protein?'\n"
                "‚Ä¢ 'How do I reset my password?'\n"
                "‚Ä¢ 'Show me app features'")

if __name__ == '__main__':
    print("ü§ñ NutriDot ChatBot starting up...")
    print("üì° Server will be available at http://127.0.0.1:5000")
    app.run(debug=True, host='127.0.0.1', port=5000)